snippet for "For loop snippet"
#define FOR(i, l, r) for (int (i) = (l); (i) < (r); ++(i))
endsnippet

snippet usaco "USACO Snippet"
/*
ID: kkweon1
TASK: friday
LANG: C++
*/
endsnippet

snippet cppio "C++ Competitive Programming FastIO"
#include <bits/stdc++.h>
using namespace std;

int main(int argc, char* argv[]) {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  $0
  return 0;
}
endsnippet

snippet DEBUG "Print Macro for CP"
#define DEBUG(x) \
    std::cout << #x <<  " = " << x << std::endl;
endsnippet

snippet DEBUG_XS "Print Array Macro for CP"
#define DEBUG_XS(xs) \
    std::cout << #xs << " = [ "; \
    for (auto it = std::begin((xs)); it != std::end((xs)); ++it) \
        std::cout << *it <<  " "; \
    std::cout << "]\n";
endsnippet

snippet cppcp "C++ Competitive Programming"
#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <memory>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <vector>

using namespace std;

#define DEBUG(x) std::cout << #x << " = " << x << std::endl;
#define DEBUG_ARR(xs)                                                          \
  std::cout << #xs << " = [ ";                                                 \
  for (auto it = std::begin((xs)); it != std::end((xs)); ++it)                 \
    std::cout << *it << " ";                                                   \
  std::cout << "]\n";
#define REP(i, n) for (int i = 0; i < (n); i++)
#define FOR(i, a, b) for (int i = (a); i <= (b); i++)
#define FORD(i, a, b) for (int i = (a); i >= (b); i--)
inline bool EQ(double a, double b) { return fabs(a - b) < 1e-9; }
const int INF = 1 << 29;
typedef long long ll;
inline int two(int n) { return 1 << n; }
inline int test(int n, int b) { return (n >> b) & 1; }
inline void set_bit(int& n, int b) { n |= two(b); }
inline void unset_bit(int& n, int b) { n &= ~two(b); }
inline int last_bit(int n) { return n & (-n); }
inline int ones(int n) {
  int res = 0;
  while (n && ++res)
    n -= n & (-n);
  return res;
}
template <class T> void chmax(T& a, const T& b) { a = max(a, b); }
template <class T> void chmin(T& a, const T& b) { a = min(a, b); }
/////////////////////////////////////////////////////////////////////
int main(void) {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  return 0;
}
endsnippet
